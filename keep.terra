import os
import time


a = 12
expr = cmp(12 == a && 20 == 12)
echo(expr)
// time.sleep(3)

Func exe(){
	echo('hello world')
	return 1 + 2
}

struct Person{
	name,
	age
}

struct Person One;
One.name = 'Kevy'
echo(One.name)


// input = enter('>>> ')
input = '23'

if(input == 'hello world' | input != 'hello earth'){
	echo('cool it is right.')
} else{
	echo("didn't expect this one")
}
end


Func delete(path_){
	if(os.path.exists(path_)){
		if(os.path.isfile(path_)){
			// echo(path_)
			os.remove(path_)
		}
		else if(os.path.isdir(path_)){
			dir = os.listdir(path_)
			echo(dir)

			for(i in dir){
				delete(os.path.join(path_, i))
			}
		}
		end
	}
	end
}


Object Db{
	Func public(db_name){
		self.dbname = db_name 
		self.db = Array[]
	}

	Func insert(data_, callback=null){
		self.db.append(data_)

		if(callback == null){
			continue
		} else{
			callback()
		}
		end
	}

	Func fetch(){
		return self.db
	}
}

Func call(){
	echo('successfully added data')
}

data = Db('mango')
data.insert('Flourine')
data.insert('Carbon')
echo(data.fetch())


// datatypes
numbers = 17
flt = 12.5

info = 'in array'
arrays = Array[1, 2, info, 4]
sets = Set(1,2,3,4,5)

dt = {
	'Country': 'Uganda',
	'City': 'Kampala',
	'location': Array[
		1,3,4,5
	]
}

echo(dt)


/*
// loops
for(i in Array[1,2,3,4,5,6,7,8,9,0,6,5,3,4,5,7,8,8]){
	echo(i)
}

count = 1

while(count == 1000){
	echo(count)
	count++
}
*/

import tkinter as tk

root = tk.Tk()
root.geometry('500x600')
root.config(Assign(bg='#16191b'))

lb = tk.Label(root, Assign(fg='white', text='calulator', bg='#16191b', height=5))
lb.pack()

input = tk.Text(root, Assign(font=Tuple('helvetica', 30, 'bold'), highlightbackground='black', padx=2, pady=2, bd=0, fg='white', bg='#16191b', height=2))
input.pack(Assign(ipady=2))

output = tk.Text(root, Assign(font=Tuple('helvetica', 20, 'bold'), highlightbackground='black', padx=2, pady=2, bd=0, fg='white', bg='#16191b', height=1.7))
output.pack(Assign(ipady=2))

Func gets(){
	question = input.get(1.0, tk.END).strip('\n')
	output.delete(1.0, tk.END)
	output.insert(1.0, eval(?'{question}'))
}

sum = tk.Button(root, Assign(text='answer', font=Tuple('monospace', 16), command=lambda:gets()))
sum.pack()

root.wait_visibility(root)
root.wm_attributes('-alpha', 0.95)
root.mainloop()

